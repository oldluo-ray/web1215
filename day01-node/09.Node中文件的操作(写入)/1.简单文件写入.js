/*
 *  Node中的文件系统：
 *     1.在NodeJS中有一个文件系统，所谓的文件系统，就是让你通过Modejs代码操作本地的文件。（增删改查）
 *     2.在NodeJS中，给我们提供了一个模块，专门用于操作文件
 *     3.该模块的名字叫做fs模块，fs模块是Node的核心模块，无需下载，需要引入。
 *
 *   fs.writeFile(file, data[, options], callback)
 *           --file:要写入的文件路径+文件名+文件后缀
 *           --data：要写入的数据
 *           --options：配置对象
 *                 --flag：打开文件要进行的操作，默认值：'w'
 *                     'w' : 写入
 *                     'r' ：读取
 *                     'a' ：追加
 *                 --mode ：文件的权限控制，默认值是0o666
 *                     0o111 : 文件可被执行的权限
 *                     0o222 ：文件被写入的权限
 *                     0o444 ：文件被读取的权限
 *                 --encoding ：编码，默认是：'utf-8'
 *
 *           --callback：回调函数
 *
 *   在Node中有一个原则：错误优先
 *
 *   对于简单文件写入来说，是将要写入的数据一次性的全部加载到内存中（水一次性全部承装到盆子里）
 *
 * */

// 引入file模块
const fs = require('fs')

// fs.writeFile('文件路径', '要写入的数据', {配置项}, 回调函数)
// 如果要写入的文件路径不存在,node就会自动创建
// node中采用错误优先规则: 写入完毕,不管成功与否,都会调用回调.但是当错误的时候,会传入一个错误对象
// 简单的这个writeFile方法,1. 异步执行 2. 将要写入的数据,一次性加载到内存中然后写道对应的文件中
fs.writeFile(
  './test.txt',
  '朕的女人',
  {
    flag: 'r',
  },
  (err) => {
    if (err) return console.log('写入错误', err)
    console.log('写入成功了')
  }
)
