同源跨域
同源: 浏览器的安全策略
策略响应: 要求请求回来的html的url地址和在这个html中请求的其他数据的url地址.协议,
  域名,
  端口号都要相同.如果这些都相同就认为是同源的.那数据就是安全的.否则不同源,
  数据不安全
同源策略的限制范围: cookie, localStorage

ajax请求
跨域: 就是给不同源的地址发送请求, 就是跨域.默认跨域的请求数据是无法获取到的
jsonp: 
    原理: 利用script标签,不受同源策略影响的特性,去发送请求. 要求在全局定义一个函数,然后将这个函数名上传给服务器(查询字符串的形式callback=函数名). 服务器要配合将要返回的数据,当做实参写在函数调用中.最后服务器返回一个函数调用的字符串.当请求响应成功之后,对应的返回的字符串会当做js代码执行,我们之前定义的全局函数就会被调用.响应的数据,就会成功这个函数的形参接收到

    特点: 1. 兼容性很好  2. 只能发送get请求  3. 必须要后端配合


    jquery中发送ajax请求以及解决jsonp跨域问题: 
    $.ajax({
        url: 请求地址
        type: 请求方式
        data: {} 上传的数据,
        dataType: 'json/jsonp' jquery地址自动帮我们创建函数,上传函数名 
        success: function(data){} 成功
        error: function(){} 错误
        complete: function(){} 完成 
        beforeSend: function(){} 请求发送之前调用. 如果显式的return false,请求就不发送了
    })

cors : 跨域资源共享 

    特点: 1. 不限制请求方式  2. 有兼容性问题  3. 后台也要配合


同源策略现代的浏览器执行机制: 
    当发现要发送的请求是跨域的时候,浏览器会先自动发送一个预请求, 询问服务器是否同意跨域.如果服务器处理了(同意了)浏览器就将真正的请求发送出去,如果服务器没有处理,就不发送真正的跨域请求
